name: macOS

on:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/macos.yaml'
      - 'cmake/**'
      - 'src/**'
      - 'tests/**'
      - 'CMakeLists.txt'
  pull_request:
    branches: [ master ]
    paths:
      - '.github/workflows/macos.yaml'
      - 'cmake/**'
      - 'src/**'
      - 'tests/**'
      - 'CMakeLists.txt'

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        brew update
        # Install gfortran from gcc
        brew install gcc@13
        # Find gfortran location
        GFORTRAN_PATH=$(brew --prefix gcc@13)/bin/gfortran-13
        echo "Found gfortran at: ${GFORTRAN_PATH}"
        # Install other dependencies
        brew install \
          cmake \
          ninja \
          python \
          numpy \
          googletest \
          glog \
          llvm \
          lcov \
          yaml-cpp \
          nlohmann-json \
          netcdf \
          netcdf-cxx \
          xtensor

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        GFORTRAN_PATH=$(brew --prefix gcc@13)/bin/gfortran-13
        cmake -G Ninja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_C_COMPILER=clang \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DCMAKE_CXX_STANDARD=17 \
          -DCMAKE_Fortran_COMPILER=${GFORTRAN_PATH} \
          ..

    - name: Build
      run: |
        cd build
        cmake --build .

    - name: Test
      run: |
        cd build
        ctest --output-on-failure

    # Coverage upload temporarily disabled until coverage generation is properly configured
    # - name: Generate coverage report
    #   run: |
    #     cd build
    #     lcov --capture --directory . --output-file coverage.info
    #     lcov --remove coverage.info '/usr/*' --output-file coverage.info
    
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     files: ./build/coverage.info
    #     flags: macos
    #     name: macos-coverage
    #     fail_ci_if_error: true 